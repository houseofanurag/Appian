#!/bin/bash
 
# === Variables - customize these ===
privateKeyFile="private_key.pem"
csrFile="request.csr"
password="sandoz#Appian@2025"  # <-- Replace with your password
configFile="openssl.cnf"
 
# === Create OpenSSL config file content with CN and SANs ===
cat > "$configFile" <<EOF
[ req ]
default_bits       = 2048
prompt             = no
default_md         = sha256
distinguished_name = dn
req_extensions     = req_ext
 
[ dn ]
CN = *.appiancloud.com
 
[ req_ext ]
subjectAltName = @alt_names
 
[ alt_names ]
DNS.1 = *.appiancloud.com
DNS.2 = *.api.appiancloud.com
DNS.3 = api.appiancloud.com
DNS.4 = *.appiancloud-dynamic.com
DNS.5 = appiancloud-static.com
DNS.6 = appiancloud.com
DNS.7 = appiancloud-dynamic.com
DNS.8 = *.appiancloud-static.com
EOF
 
echo "OpenSSL config file '$configFile' created."
 
# === Generate password-protected private key ===
echo "Generating password-protected RSA private key..."
openssl genpkey -algorithm RSA -aes256 -pass pass:"$password" -out "$privateKeyFile" -pkeyopt rsa_keygen_bits:2048
if [[ ! -f "$privateKeyFile" ]]; then
  echo "Private key generation failed!" >&2
  exit 1
fi
echo "Private key generated: $privateKeyFile"
 
# === Generate CSR using the private key and config file ===
echo "Generating CSR..."
openssl req -new -key "$privateKeyFile" -passin pass:"$password" -out "$csrFile" -config "$configFile"
if [[ ! -f "$csrFile" ]]; then
  echo "CSR generation failed!" >&2
  exit 1
fi
echo "CSR generated: $csrFile"
 
# === Verify the SANs in the CSR ===
echo "Verifying SANs in CSR..."
openssl req -in "$csrFile" -noout -text | grep -A 10 "Subject Alternative Name"
 
echo "Script complete."
